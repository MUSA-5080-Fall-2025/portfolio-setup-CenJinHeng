{
  "hash": "be79086e684994d078c5736d4df0be21",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 1: Census Data Quality for Policy Decisions\"\nsubtitle: \"Evaluating Data Reliability for Algorithmic Decision-Making\"\nauthor: \"Jinheng Cen\"\ndate: 2025/09/26\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\nexecute:\n  warning: false\n  message: false\n---\n\n# Assignment Overview\n\n## Scenario\n\nYou are a data analyst for the **New Jersey Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n## Learning Objectives\n\n- Apply dplyr functions to real census data for policy analysis\n- Evaluate data quality using margins of error \n- Connect technical analysis to algorithmic decision-making\n- Identify potential equity implications of data reliability issues\n- Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this assignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:\n\n```\n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n```\nIf there is a special character like comma, you need use double quote mark so that the quarto can identify this as text\n\n# Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(knitr)\n\n# Set your Census API key\ncensus_api_key(Sys.getenv(\"ba33e51bc7f9bbf247d76be557bdef8d36278508Y\"))\n\n# Choose your state for analysis - assign it to a variable called my_state\nmy_state <- \"NJ\"\n```\n:::\n\n\n**State Selection:** I have chosen **New Jersey** for this analysis because: New Jersey is located in the Northeast Megalopolis, positioned between two major metropolitan centers: New York City and Philadelphia. This unique geographical location makes New Jersey a critical one in regional urban development, which I find particularly interesting.\n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.\n\n**Requirements:**\n- Geography: county level\n- Variables: median household income (B19013_001) and total population (B01003_001)  \n- Year: 2022\n- Survey: acs5\n- Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the `variables = c(name = \"code\")` syntax.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your get_acs() code here\ncounty_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_income = \"B19013_001\",   # Median household income\n    total_population = \"B01003_001\"       # Total pop\n  ),\n  state = my_state,\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\"\n)\n\n# Clean the county names to remove state name and \"County\" \n# Hint: use mutate() with str_remove()\ncounty_data <- county_data %>%\n  mutate(county_name = NAME %>% \n           str_remove(\" County, New Jersey\")\n         )\n\n# Display the first few rows\nhead(county_data,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 7\n   GEOID NAME  median_incomeE median_incomeM total_populationE total_populationM\n   <chr> <chr>          <dbl>          <dbl>             <dbl>             <dbl>\n 1 34001 Atla…          73113           1917            274339                NA\n 2 34003 Berg…         118714           1607            953243                NA\n 3 34005 Burl…         102615           1436            461853                NA\n 4 34007 Camd…          82005           1414            522581                NA\n 5 34009 Cape…          83870           3707             95456                NA\n 6 34011 Cumb…          62310           2205            153588                NA\n 7 34013 Esse…          73785           1477            853374                NA\n 8 34015 Glou…          99668           2605            302621                NA\n 9 34017 Huds…          86854           1782            712029                NA\n10 34019 Hunt…         133534           3236            129099                NA\n# ℹ 1 more variable: county_name <chr>\n```\n\n\n:::\n:::\n\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create reliability categories.\n\n**Requirements:**\n- Calculate MOE percentage: (margin of error / estimate) * 100\n- Create reliability categories:\n  - High Confidence: MOE < 5%\n  - Moderate Confidence: MOE 5-10%  \n  - Low Confidence: MOE > 10%\n- Create a flag for unreliable estimates (MOE > 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentage and reliability categories using mutate()\ncounty_data <- county_data %>%\n  mutate(median_incomeMOE = (median_incomeM / median_incomeE) * 100,\n        rel_categories = case_when(\n            median_incomeMOE < 5 ~ \"High Confidence\",\n            median_incomeMOE >= 5 & median_incomeMOE < 10 ~ \"Moderate Confidence\",\n            median_incomeMOE >= 10 ~ \"Low Confidence\"\n        )\n  )\n\n# Create a summary showing count of counties in each reliability category\n# Hint: use count() and mutate() to add percentages\nsummary_data <- county_data %>%\n  count(rel_categories) %>%\n  mutate(percentage = n/sum(n))\n```\n:::\n\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:**\n- Sort by MOE percentage (highest first)\n- Select the top 5 counties\n- Display: county name, median income, margin of error, MOE percentage, reliability category\n- Format as a professional table using `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create table of top 5 counties by MOE percentage\n#?arrange\n#?select\n#glimpse(county_data)\n\ntop_5 <- county_data %>%\n  arrange(desc(median_incomeMOE)) %>%\n  slice_head( n = 5 ) %>%\n  select(county_name, median_incomeE, median_incomeM, median_incomeMOE, rel_categories)\n\ntop_5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  county_name median_incomeE median_incomeM median_incomeMOE rel_categories \n  <chr>                <dbl>          <dbl>            <dbl> <chr>          \n1 Cape May             83870           3707             4.42 High Confidence\n2 Salem                73378           3047             4.15 High Confidence\n3 Cumberland           62310           2205             3.54 High Confidence\n4 Atlantic             73113           1917             2.62 High Confidence\n5 Gloucester           99668           2605             2.61 High Confidence\n```\n\n\n:::\n\n```{.r .cell-code}\n# Format as table with kable() - include appropriate column names and caption\n#?kable\nkable(top_5,digits = getOption(\"digits\"), caption = \"Top 5 counties in NJ with the highest median income MOE\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 5 counties in NJ with the highest median income MOE\n\n|county_name | median_incomeE| median_incomeM| median_incomeMOE|rel_categories  |\n|:-----------|--------------:|--------------:|----------------:|:---------------|\n|Cape May    |          83870|           3707|         4.419936|High Confidence |\n|Salem       |          73378|           3047|         4.152471|High Confidence |\n|Cumberland  |          62310|           2205|         3.538758|High Confidence |\n|Atlantic    |          73113|           1917|         2.621969|High Confidence |\n|Gloucester  |          99668|           2605|         2.613677|High Confidence |\n\n\n:::\n:::\n\n\n**Data Quality Commentary:**\n\n[Write 2-3 sentences explaining what these results mean for algorithmic decision-making. Consider: Which counties might be poorly served by algorithms that rely on this income data? What factors might contribute to higher uncertainty?]\n\nCounties with high MOE are not suitable for consideration using algorithmic decision-making, as the margin errors are substantial, which means some important details could be lost in the calculation process. The result of the algorithm could be unreliable and can not convince people. For this income data in New Jersey, Cape May is not a good choice. Factors contributing to the high uncertainty could include income variance across different groups, sample sizes, and data collecting methods.\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\n\n# NOTE: Since all the NJ counties are High Confidence, I chose the highest and lowest ones, combined with a moderate one\nselected_counties <- county_data %>%\n  filter(county_name == \"Cape May\"|county_name == \"Bergen\"|county_name == \"Union\")\n\nselected_counties\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 9\n  GEOID NAME   median_incomeE median_incomeM total_populationE total_populationM\n  <chr> <chr>           <dbl>          <dbl>             <dbl>             <dbl>\n1 34003 Berge…         118714           1607            953243                NA\n2 34009 Cape …          83870           3707             95456                NA\n3 34039 Union…          95000           2210            572079                NA\n# ℹ 3 more variables: county_name <chr>, median_incomeMOE <dbl>,\n#   rel_categories <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the selected counties with their key characteristics\n# Show: county name, median income, MOE percentage, reliability category\n\nselected_counties <- selected_counties %>%\n  select(county_name, median_incomeE, median_incomeMOE, rel_categories)\nkable(selected_counties,digits = getOption(\"digits\"), caption = \"Selected Counties\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Selected Counties\n\n|county_name | median_incomeE| median_incomeMOE|rel_categories  |\n|:-----------|--------------:|----------------:|:---------------|\n|Bergen      |         118714|         1.353673|High Confidence |\n|Cape May    |          83870|         4.419936|High Confidence |\n|Union       |          95000|         2.326316|High Confidence |\n\n\n:::\n:::\n\n\n**Comment on the output:** \nIt appears that the median income level and the MOE are somewhat correlated, the higher the median income, the lower the MOE. \n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected counties.\n\n**Requirements:**\n- Geography: tract level\n- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)\n- Use the same state and year as before\n- Output format: wide\n- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define your race/ethnicity variables with descriptive names\nvars = c(\n    white = \"B03002_003\",   \n    Black = \"B03002_004\",\n    Hispanic = \"B03002_012\",\n    total_population = \"B03002_001\"\n  )\n\n# Use get_acs() to retrieve tract-level data\n# Hint: You may need to specify county codes in the county parameter\ntract_data <- get_acs(\n  geography = \"tract\",\n  variables = vars,\n  state = my_state,\n  county = c(\"003\", \"009\", \"039\"),\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\"\n)\n\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\ntract_data <- tract_data %>%\n  mutate(\n    white_percentage = (whiteE / total_populationE)*100,\n    black_percentage = (BlackE / total_populationE)*100,\n    his_percentage = (HispanicE / total_populationE)*100\n  )\n\n# Add readable tract and county name columns using str_extract() or similar\n#?str_extract()\ntract_data <- tract_data %>%\n  mutate(\n    tract_name  = str_trim(str_split_fixed(NAME, \";\", 3)[,1]),\n    county_name = str_trim(str_remove(str_split_fixed(NAME, \";\", 3)[,2], \" County\"))\n  )\n```\n:::\n\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\ntop_his_tract <- tract_data %>%\n  arrange(desc(his_percentage)) %>%\n  slice_head(n = 1)\n\ntop_his_tract\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 15\n  GEOID  NAME  whiteE whiteM BlackE BlackM HispanicE HispanicM total_populationE\n  <chr>  <chr>  <dbl>  <dbl>  <dbl>  <dbl>     <dbl>     <dbl>             <dbl>\n1 34039… Cens…    218    120    310    219      2935       624              3483\n# ℹ 6 more variables: total_populationM <dbl>, white_percentage <dbl>,\n#   black_percentage <dbl>, his_percentage <dbl>, tract_name <chr>,\n#   county_name <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate average demographics by county using group_by() and summarize()\n# Show: number of tracts, average percentage for each racial/ethnic group\nsummary_data_2 <- tract_data %>%\n  group_by(county_name) %>%\n  summarize(\n    num_tract = n(),\n    avg_white_p = mean(white_percentage, na.rm = TRUE),\n    avg_black_p = mean(black_percentage, na.rm = TRUE),\n    avg_his_p = mean(his_percentage, na.rm = TRUE)\n  )\n\n# Create a nicely formatted table of your results using kable()\nkable(summary_data_2,digits = getOption(\"digits\"), caption = \"Average percentage of races\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Average percentage of races\n\n|county_name | num_tract| avg_white_p| avg_black_p| avg_his_p|\n|:-----------|---------:|-----------:|-----------:|---------:|\n|Bergen      |       203|    53.08512|    5.390523| 21.595950|\n|Cape May    |        33|    86.01229|    2.830430|  7.664504|\n|Union       |       120|    35.83627|   20.277607| 34.532339|\n\n\n:::\n:::\n\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.\n\n**Requirements:**\n- Calculate MOE percentages for each demographic variable\n- Flag tracts where any demographic variable has MOE > 15%\n- Create summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\n\ntract_data <- tract_data %>%\n  mutate(\n    white_MOE = (whiteM / whiteE)*100,\n    black_MOE = (BlackM / BlackE)*100,\n    his_MOE = (HispanicM / HispanicE)*100,\n  )\n\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\n\ntract_data <- tract_data %>%\n  mutate(\n    flag = if_else(\n      white_MOE > 15 | black_MOE > 15 | his_MOE > 15,\n      \"Flag\",\n      \"Moderate\"\n    )\n  )\n\n# Create summary statistics showing how many tracts have data quality issues\nnum_flag <- tract_data %>%\n  filter(flag == \"Flag\") %>%\n  summarise(\n    num = n()\n  ) #356\n```\n:::\n\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n\n# Use group_by() and summarize() to create this comparison\n# Create a professional table showing the patterns\n\n#NOTE: I chose white alone and calculated the white_flag, cuz all tracts are flagged in the previous step \n\ntract_data <- tract_data %>%\n  mutate(\n    flag_white = if_else(\n      white_MOE > 15,\n      \"Flag\",\n      \"Moderate\"\n    )\n  )\n\nsummary_data_3 <- tract_data %>%\n  group_by(flag_white) %>%\n  summarise(\n    num = n(),\n    avg_pop = mean(total_populationE, na.rm = TRUE),\n    avg_white_p = mean(white_percentage, na.rm = TRUE),\n  )\n\nkable(summary_data_3,digits = getOption(\"digits\"), caption = \"summary of flagged and unflaged group\")\n```\n\n::: {.cell-output-display}\n\n\nTable: summary of flagged and unflaged group\n\n|flag_white | num|  avg_pop| avg_white_p|\n|:----------|---:|--------:|-----------:|\n|Flag       | 256| 4440.484|    40.63099|\n|Moderate   | 100| 4840.140|    74.68121|\n\n\n:::\n:::\n\n\n**Pattern Analysis:** [Describe any patterns you observe. Do certain types of communities have less reliable data? What might explain this?]\nIt seems like that a community with large population and high concentration of certain kind of people are likely to be not flagged. This can be explained by the sample size that MOE would be smaller if the sample size goes larger.\n\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from all four analyses.\n\n**Executive Summary Requirements:**\n1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?\n\n2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?\n\n3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?\n\n4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?\n\n**Executive Summary:**\n\nIn this study, I used MOE percentages as key metrics. I divided the large dataset into several groups to see if there were differences between them. I aim to identify counties or communities that are not suitable for data-driven decision-making processes in economic and racial aspects.\n\nMy findings are: communities with smaller population size are in the risk of algorithmic bias, what's more, diverse communities with different races and various groups of people have higher MOE percentage. Economically disadvantaged communities with income inequality are also liked to have the bias issue.\n\nThe reasons for the data quality issues and bias risk can be: (1) Sample size. Smaller populations usually have higher sample error and missing data. Minority are hard to reach out by the census survey as well. (2) Socioeconomic and Demographic variance. Diverse communties have large internal variation, which leads to higher marginal errors.\n\nDepartments should not just rely on the algorithm to make their decisions. On-site investigation and community engagement is crucial to know the truth. There are stories, knowledge, and so on that can not reflect from numbers. Planners should be critical about the results of data-driven analysis.\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\nsummary_county <- county_data %>%\n  select(county_name,median_incomeE,median_incomeMOE,rel_categories)\n\nsummary_county\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 21 × 4\n   county_name median_incomeE median_incomeMOE rel_categories \n   <chr>                <dbl>            <dbl> <chr>          \n 1 Atlantic             73113             2.62 High Confidence\n 2 Bergen              118714             1.35 High Confidence\n 3 Burlington          102615             1.40 High Confidence\n 4 Camden               82005             1.72 High Confidence\n 5 Cape May             83870             4.42 High Confidence\n 6 Cumberland           62310             3.54 High Confidence\n 7 Essex                73785             2.00 High Confidence\n 8 Gloucester           99668             2.61 High Confidence\n 9 Hudson               86854             2.05 High Confidence\n10 Hunterdon           133534             2.42 High Confidence\n# ℹ 11 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\n\nsummary_county <- summary_county %>%\n  mutate(\n    recommendation = \n  case_when(\n    rel_categories == \"High Confidence\" ~ \"Safe for algorithmic decisions\",\n    rel_categories == \"Moderate Confidence\" ~ \"Use with caution - monitor outcomes\",\n    rel_categories == \"Low Confidence\" ~ \"Requires manual review or additional data\"\n  )\n  )\n\n# Format as a professional table with kable()\n\nkable(summary_county,digits = getOption(\"digits\"), caption = \"Recommendation for algorithmic decisions\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Recommendation for algorithmic decisions\n\n|county_name | median_incomeE| median_incomeMOE|rel_categories  |recommendation                 |\n|:-----------|--------------:|----------------:|:---------------|:------------------------------|\n|Atlantic    |          73113|         2.621969|High Confidence |Safe for algorithmic decisions |\n|Bergen      |         118714|         1.353673|High Confidence |Safe for algorithmic decisions |\n|Burlington  |         102615|         1.399406|High Confidence |Safe for algorithmic decisions |\n|Camden      |          82005|         1.724285|High Confidence |Safe for algorithmic decisions |\n|Cape May    |          83870|         4.419936|High Confidence |Safe for algorithmic decisions |\n|Cumberland  |          62310|         3.538758|High Confidence |Safe for algorithmic decisions |\n|Essex       |          73785|         2.001762|High Confidence |Safe for algorithmic decisions |\n|Gloucester  |          99668|         2.613677|High Confidence |Safe for algorithmic decisions |\n|Hudson      |          86854|         2.051719|High Confidence |Safe for algorithmic decisions |\n|Hunterdon   |         133534|         2.423353|High Confidence |Safe for algorithmic decisions |\n|Mercer      |          92697|         2.325857|High Confidence |Safe for algorithmic decisions |\n|Middlesex   |         105206|         1.461894|High Confidence |Safe for algorithmic decisions |\n|Monmouth    |         118527|         1.605541|High Confidence |Safe for algorithmic decisions |\n|Morris      |         130808|         2.084735|High Confidence |Safe for algorithmic decisions |\n|Ocean       |          82379|         1.766227|High Confidence |Safe for algorithmic decisions |\n|Passaic     |          84465|         1.851654|High Confidence |Safe for algorithmic decisions |\n|Salem       |          73378|         4.152471|High Confidence |Safe for algorithmic decisions |\n|Somerset    |         131948|         2.485828|High Confidence |Safe for algorithmic decisions |\n|Sussex      |         111094|         2.460979|High Confidence |Safe for algorithmic decisions |\n|Union       |          95000|         2.326316|High Confidence |Safe for algorithmic decisions |\n|Warren      |          92620|         2.598791|High Confidence |Safe for algorithmic decisions |\n\n\n:::\n:::\n\n\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to the department.\n\n1. **Counties suitable for immediate algorithmic implementation:** \nLow MOE group (≈ 1.85 – 1.35)\nCounties: Passaic, Ocean, Camden, Monmouth, Middlesex, Burlington, Bergen\n\n2. **Counties requiring additional oversight:** \nMid MOE group (≈ 2.46 – 2.00)\nCounties: Sussex, Hunterdon, Union, Mercer, Morris, Hudson, Essex\n\n3. **Counties needing alternative approaches:** \nHigh MOE group (≈ 4.42 – 2.60)\nCounties: Cape May, Salem, Cumberland, Atlantic, Gloucester, Warren, Somerset\n\n## Questions for Further Investigation\n\n(1) Do counties with higher margins of error cluster geographically?\n(2) Do certain counties show persistently high uncertainty?\n(3) Are higher MOEs systematically associated with specific demographic factors?\n\n# Technical Notes\n\n**Data Sources:** \n- U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates\n- Retrieved via tidycensus R package on September 26 2025\n\n**Reproducibility:** \n- All analysis conducted in R version 2025.05.1+513\n- Census API key required for replication\n- Complete code and documentation available at: https://musa-5080-fall-2025.github.io/portfolio-setup-CenJinHeng/\n\n**Methodology Notes:**\nThe choice of threshold values (e.g., 15% and 10%) to categorize reliability was subjective.\n\n**Limitations:**\n- Geographic Scope: The analysis focused solely on New Jersey, which limits the ability to generalize findings to other states or regional contexts.\n- Temporal Factors: Only 2022 ACS 5-year estimates were used, providing a snapshot\n- Variable Selection: The study emphasized median household income and racial/ethnic categories\n\n---\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n- [✅] All code chunks run without errors\n- [✅  All \"[Fill this in]\" prompts have been completed\n- [✅] Tables are properly formatted and readable\n- [✅] Executive summary addresses all four required components\n- [✅] Portfolio navigation includes this assignment\n- [✅] Census API key is properly set \n- [✅] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}